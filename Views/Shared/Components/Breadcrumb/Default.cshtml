@model IReadOnlyList<api_doc.Models.Ui.BreadcrumbItem>

<ol class="flex items-center whitespace-nowrap p-2 border-y border-gray-200 dark:border-neutral-700">
    @for (int i = 0; i < Model.Count; i++)
    {
        var item = Model[i];
        var isLast = i == Model.Count - 1;

        if (!isLast)
        {
            <li class="inline-flex items-center">
                <a class="flex items-center text-sm text-gray-500 hover:text-blue-600 focus:outline-hidden focus:text-blue-600 dark:text-neutral-500 dark:hover:text-blue-500 dark:focus:text-blue-500" href="@item.Url">
                    @* √çcone opcional *@
                    @if (!string.IsNullOrWhiteSpace(item.IconPath))
                    {
                        var parts = item.IconPath.Split('|');
                        <svg class="shrink-0 me-3 size-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            @foreach (var d in parts) { <path d="@d"></path> }
                        </svg>
                    }
                    @item.Label
                </a>
                <svg class="shrink-0 mx-2 size-4 text-gray-400 dark:text-neutral-600" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="m9 18 6-6-6-6"></path>
                </svg>
            </li>
        }
        else
        {
            <li class="inline-flex items-center text-sm font-semibold text-gray-800 truncate dark:text-neutral-200" aria-current="page">
                @item.Label
            </li>
        }
    }
</ol>